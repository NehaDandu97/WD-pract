<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS styling</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <!-- <h1>Flexbox playground</h1>
    <div id="container">
        <div id="box1">box1</div>
        <div id="box2">box2</div>
        <div id="box3">box3</div>
        <div id="box4">box4</div>
        <div id="box5">box5</div>
    </div> -->

        
</body>
</html>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/* FlexBox */

/* Flexbox Direction 

It sets how flex items are placed in the flex container,along which axis and direction. 
flex-direction: row;(default) , mainaxis=row(left to right)
flex-direction: row-reverse; mainaxis=row(right to left)
flex-direction: column;
flex-direction: column-reverse; */

/* body{
    text-align: center;
}
div{
    height: 100px;
    width: 500px;
    display: inline-block;
    border: 2px solid black;
}

#container{
    width: 800px;
    height: 300px;
    display: flex;
    flex-direction: row;
}

#box1{
    background-color: aqua;
}
#box2{
    background-color: pink;
}
#box3{
    background-color: yellow;
}
#box4{
    background-color: chocolate;
}
#box5{
    background-color: blue;
} */

/*Flex Container */

/* justify-content: alignment along the main axis. flex-start/flex-end/centre/space-evenly/ 
flex-wrap: nowrap/wrap/wrap-reverse
align-items: alignment along the cross axis. align-content: alignment of space between & around the content  */

/* body {
    text-align: center;
}

div {
    height: 100px;
    width: 150px;
    display: inline-block;
    border: 2px solid black;
}

#container {
    width: 600px;
    height: 600px;
    display: flex;
    flex-direction: row;
    justify-content: center;
    flex-wrap: wrap;
    align-items: center;
    align-content: center;
}

#box1 {
    background-color: aqua;
}

#box2 {
    background-color: pink;
    height: 200px;
}

#box3 {
    background-color: yellow;
    height: 75px;
}

#box4 {
    background-color: chocolate;
}

#box5 {
    background-color: blue;
} */

/* Flex Item  */

/* align-self: alignment of individual along the cross axis.
flex-grow: how much a flex item will grow relative to the rest of the flex items if space is available
flex-shrink:how much a flex item will shrink relative to the rest of the space is available */

/* body {
    text-align: center;
}

div {
    height: 100px;
    width: 50px;
    display: inline-block;
    border: 2px solid black;
} */

/* #container {
    width: 600px;
    height: 600px;
    display: flex;
    flex-direction: row;
    justify-content: center;
    flex-wrap: wrap;
    align-items: flex-start;
    
}

#box1 {
    background-color: aqua;
}

#box2 {
    background-color: pink;
    height: 200px;
}

#box3 {
    background-color: yellow;
    height: 75px;
}

#box4 {
    background-color: chocolate;
}

#box5 {
    background-color: blue;
    align-self: flex-end;
} */

/* #container {
    width: 700px;
    height: 300px;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: flex-start;

}

#box1 {
    background-color: aqua;
    flex-grow: 1;
}

#box2 {
    background-color: pink;
    height: 200px;
    flex-grow: 2;
}

#box3 {
    background-color: yellow;
    height: 75px;
}

#box4 {
    background-color: chocolate;
}

#box5 {
    background-color: blue;
} */
